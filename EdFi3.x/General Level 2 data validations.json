{
  "Name": "General Level 2 data validations",
  "Description": "A collection of level 2 data validations ",
  "EnvironmentType": "Ed-Fi v3.X",
  "Containers": [
    {
      "Name": "Discipline",
      "Description": "Rules related to discipline incidents",
      "Rules": [
        {
          "Name": "discipline incident missing behavior",
          "Description": "find all discipline incidents that do not have associated behavior",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "\nselect DisciplineIncident.IncidentIdentifier,\n\t   DisciplineIncident.SchoolId as educationOrganizationId,\n\t   'Edfi.School' discrimentator,\n\t   DisciplineIncident.IncidentDate\nFrom edfi.DisciplineIncident\nleft join edfi.DisciplineIncidentBehavior\n\ton DisciplineIncident.IncidentIdentifier = DisciplineIncidentBehavior.IncidentIdentifier\nWhere DisciplineIncidentBehavior.BehaviorDescriptorId is null\n",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Discipline incident student not enrolled school",
          "Description": "Look for discipline incidents that happen at a school where the student involved is not enrolled at that school",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "--Raise a major validation error for every discipline incident where the student(s) involved where not enrolled at the school associated with the discipline incident.\nselect\n  Student.StudentUniqueId,\n  StudentDisciplineIncidentAssociation.schoolId as EducationOrganizationId,\n  'Edfi.School' discrimentator,\n  DisciplineIncident.IncidentDate,\n  DisciplineIncident.IncidentIdentifier\nFROM\n  edfi.StudentDisciplineIncidentAssociation\n  JOIN edfi.student on student.studentUSI = StudentDisciplineIncidentAssociation.studentUSI\n  JOIN edfi.DisciplineIncident on DisciplineIncident.IncidentIdentifier = StudentDisciplineIncidentAssociation.IncidentIdentifier\n  LEFT JOIN edfi.StudentSchoolAssociation on student.studentUSI = StudentSchoolAssociation.StudentUSI\n  and StudentSchoolAssociation.schoolId = StudentDisciplineIncidentAssociation.schoolId\nwhere\n  StudentSchoolAssociation.StudentUSI is null",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        }
      ],
      "Tags": []
    },
    {
      "Name": "Student Program",
      "Description": "Student Program validations",
      "Rules": [
        {
          "Name": "Student began program before enrolling at school",
          "Description": "Show Students where the date they begin a program is before the date they enrolled in a school, where that program is either associated with the school or the district that the school belongs to.",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "SELECT\n  StudentUniqueId,\n  StudentProgramAssociation.EducationOrganizationId,\n  StudentProgramAssociation.ProgramName,\n  descriptor.CodeValue Programtype,\n  StudentProgramAssociation.BeginDate programBeginDate,\n  StudentSchoolAssociation.EntryDate SchoolEntryDate\nFROM\n  edfi.Student\n  JOIN edfi.StudentProgramAssociation ON student.studentUSI = StudentProgramAssociation.StudentUSI\n  JOIN edfi.descriptor ON StudentProgramAssociation.ProgramTypeDescriptorId = Descriptor.DescriptorId\n  JOIN Edfi.StudentSchoolAssociation on StudentSchoolAssociation.studentUSI = StudentProgramAssociation.studentUSI\n  JOIN Edfi.school on StudentSchoolAssociation.SchoolId = School.SchoolId\nWHERE\n  (\n    school.LocalEducationAgencyId = StudentProgramAssociation.EducationOrganizationId\n    OR School.SchoolId = StudentProgramAssociation.EducationOrganizationId\n  )\n  AND StudentSchoolAssociation.EntryDate > StudentProgramAssociation.BeginDate",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Homeless Student missing FoodServiceProgram",
          "Description": "A student has a characteristic of 'Homeless' but is not in a foor service program",
          "ErrorMessage": null,
          "SeverityLevel": 2,
          "Resolution": null,
          "Sql": "select\n  StudentEducationOrganizationAssociationStudentCharacteristic.EducationOrganizationId,\n  Student.StudentUniqueId\nFROM\n  edfi.StudentEducationOrganizationAssociationStudentCharacteristic\n  JOIN edfi.descriptor StudentCharacteristicDescriptor on StudentEducationOrganizationAssociationStudentCharacteristic.StudentCharacteristicDescriptorId = StudentCharacteristicDescriptor.DescriptorId\n  JOIN edfi.student on student.studentUSI = StudentEducationOrganizationAssociationStudentCharacteristic.StudentUSI\n  left join edfi.StudentSchoolFoodServiceProgramAssociation on StudentSchoolFoodServiceProgramAssociation.studentUSI = Student.StudentUSI\nwhere\n  StudentCharacteristicDescriptor.CodeValue = 'Homeless'\n  AND StudentSchoolFoodServiceProgramAssociation.StudentUSI is null;",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Student in ESL program but not limited English Proficency",
          "Description": "Find Students that are enrolled in an ESL program but do not have a LimitedEnglishProfiecency value specified",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "WITH CTE_EngPoficiency (\n  StudentUSI,\n  EducationOrganizationId,\n  LimtedEnglishProficiency\n) AS (\n  select\n    StudentUSI,\n    StudentEducationOrganizationAssociation.EducationOrganizationId,\n    CodeValue as LimtedEnglishProficiency\n  FROM\n    edfi.StudentEducationOrganizationAssociation\n    JOIN edfi.descriptor on StudentEducationOrganizationAssociation.LimitedEnglishProficiencyDescriptorId = descriptorId\n)\nSelect\n  DISTINCT StudentUniqueId,\n  StudentProgramAssociation.EducationOrganizationId,\n  Program.ProgramName,\n  StudentProgramAssociation.ProgramEducationOrganizationId\nFROM\n  edfi.Student\n  JOIN edfi.StudentProgramAssociation on student.StudentUSI = StudentProgramAssociation.StudentUSI\n  JOIN edfi.program on StudentProgramAssociation.ProgramEducationOrganizationId = program.EducationOrganizationId\n  and StudentProgramAssociation.ProgramName = program.programName\n  JOIN edfi.Descriptor as ProgramTypeDescriptor on ProgramTypeDescriptor.DescriptorId = program.ProgramTypeDescriptorId\n  LEFT JOIN CTE_EngPoficiency on CTE_EngPoficiency.StudentUSI = StudentProgramAssociation.StudentUSI\nWHERE\n  CTE_EngPoficiency.StudentUSI IS NULL\n  and ProgramTypeDescriptor.CodeValue like '%ESL%'",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Homeless Student not in Homeless program",
          "Description": "Show students that have a StudentCharacteristic of 'Homeless' but are not enrolled in a Program with a type of Homeless",
          "ErrorMessage": null,
          "SeverityLevel": 2,
          "Resolution": null,
          "Sql": "WITH CTE_studentProgram (StudentUSI, \n\t\t\t\t\t\tEducationOrganizationId, \n\t\t\t\t\t\tProgramName, \n\t\t\t\t\t\tProgramEducationOrganizationId,\n\t\t\t\t\t\tProgramTypeDescriptor) as\n(\nSelect StudentUSI,\n\t  StudentProgramAssociation.EducationOrganizationId,\n\t  Program.ProgramName,\n\t  StudentProgramAssociation.ProgramEducationOrganizationId,\n\t  ProgramTypeDescriptor.codeValue as ProgramTypeDescriptor\nFROM edfi.StudentProgramAssociation\nJOIN edfi.program\n\ton StudentProgramAssociation.ProgramEducationOrganizationId = program.EducationOrganizationId\n\tand StudentProgramAssociation.ProgramName = program.programName\nJOIN edfi.Descriptor as ProgramTypeDescriptor\n\ton ProgramTypeDescriptor.DescriptorId = program.ProgramTypeDescriptorId\n)\nselect StudentUniqueId,\n\tStudentEducationOrganizationAssociationStudentCharacteristic.EducationOrganizationId,\n\tCodeValue as StudentCharacteristic\nFROM edfi.Student\nJOIN edfi.StudentEducationOrganizationAssociationStudentCharacteristic\n\ton StudentEducationOrganizationAssociationStudentCharacteristic.StudentUSI = student.StudentUSI\nJOIN edfi.descriptor StudentCharacteristicDescriptor\n\ton StudentEducationOrganizationAssociationStudentCharacteristic.StudentCharacteristicDescriptorId = StudentCharacteristicDescriptor.descriptorId\nLEFT JOIN CTE_studentProgram\n\ton CTE_studentProgram.StudentUSI = StudentEducationOrganizationAssociationStudentCharacteristic.StudentUSI\n\tand CTE_studentProgram.EducationOrganizationId = StudentEducationOrganizationAssociationStudentCharacteristic.EducationOrganizationId\n\tand CTE_studentProgram.ProgramTypeDescriptor = 'Homeless'\nWHERe StudentCharacteristicDescriptor.CodeValue = 'Homeless'\nAND CTE_studentProgram.StudentUSI IS NULL\n",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Migrant Student not in Migrant Education program",
          "Description": "Show students that have a StudentCharacteristic of 'Migrant' but are not enrolled in a Program with a type of 'Migrant Education'",
          "ErrorMessage": null,
          "SeverityLevel": 2,
          "Resolution": null,
          "Sql": "WITH CTE_studentProgram (\n  StudentUSI,\n  EducationOrganizationId,\n  ProgramName,\n  ProgramEducationOrganizationId,\n  ProgramTypeDescriptor\n) as (\n  Select\n    StudentUSI,\n    StudentProgramAssociation.EducationOrganizationId,\n    Program.ProgramName,\n    StudentProgramAssociation.ProgramEducationOrganizationId,\n    ProgramTypeDescriptor.codeValue as ProgramTypeDescriptor\n  FROM\n    edfi.StudentProgramAssociation\n    JOIN edfi.program on StudentProgramAssociation.ProgramEducationOrganizationId = program.EducationOrganizationId\n    and StudentProgramAssociation.ProgramName = program.programName\n    JOIN edfi.Descriptor as ProgramTypeDescriptor on ProgramTypeDescriptor.DescriptorId = program.ProgramTypeDescriptorId\n)\nselect\n  StudentUniqueId,\n  StudentEducationOrganizationAssociationStudentCharacteristic.EducationOrganizationId,\n  CodeValue as StudentCharacteristic\nFROM\n  edfi.Student\n  JOIN edfi.StudentEducationOrganizationAssociationStudentCharacteristic on StudentEducationOrganizationAssociationStudentCharacteristic.StudentUSI = student.StudentUSI\n  JOIN edfi.descriptor StudentCharacteristicDescriptor on StudentEducationOrganizationAssociationStudentCharacteristic.StudentCharacteristicDescriptorId = StudentCharacteristicDescriptor.descriptorId\n  LEFT JOIN CTE_studentProgram on CTE_studentProgram.StudentUSI = StudentEducationOrganizationAssociationStudentCharacteristic.StudentUSI\n  and CTE_studentProgram.EducationOrganizationId = StudentEducationOrganizationAssociationStudentCharacteristic.EducationOrganizationId\n  and CTE_studentProgram.ProgramTypeDescriptor = 'Migrant Education'\nWHERe\n  StudentCharacteristicDescriptor.CodeValue = 'Migrant'\n  AND CTE_studentProgram.StudentUSI IS NULL",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "LimitedEnglishProficency student not in ESL program",
          "Description": "Show all students that are identified as having limited english proficency and are NOT enrolled in an ESL program",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "WITH CTE_studentProgram (\n  StudentUSI,\n  EducationOrganizationId,\n  ProgramName,\n  ProgramEducationOrganizationId,\n  ProgramTypeDescriptor\n) as (\n  Select\n    StudentUSI,\n    StudentProgramAssociation.EducationOrganizationId,\n    Program.ProgramName,\n    StudentProgramAssociation.ProgramEducationOrganizationId,\n    ProgramTypeDescriptor.codeValue as ProgramTypeDescriptor\n  FROM\n    edfi.StudentProgramAssociation\n    JOIN edfi.program on StudentProgramAssociation.ProgramEducationOrganizationId = program.EducationOrganizationId\n    and StudentProgramAssociation.ProgramName = program.programName\n    JOIN edfi.Descriptor as ProgramTypeDescriptor on ProgramTypeDescriptor.DescriptorId = program.ProgramTypeDescriptorId\n)\nselect\n  StudentUniqueId,\n  StudentEducationOrganizationAssociation.EducationOrganizationId,\n  CodeValue as LimtedEnglishProficiency\nFROM\n  edfi.Student\n  JOIN edfi.StudentEducationOrganizationAssociation on StudentEducationOrganizationAssociation.StudentUSI = student.StudentUSI\n  JOIN edfi.descriptor on StudentEducationOrganizationAssociation.LimitedEnglishProficiencyDescriptorId = descriptorId\n  LEFT JOIN CTE_studentProgram on CTE_studentProgram.StudentUSI = StudentEducationOrganizationAssociation.StudentUSI\n  and CTE_studentProgram.EducationOrganizationId = StudentEducationOrganizationAssociation.EducationOrganizationId\n  and CTE_studentProgram.ProgramTypeDescriptor = 'English as a Second Language (ESL)'\nWhere\n  CTE_studentProgram.StudentUSI IS NULL",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        }
      ],
      "Tags": []
    },
    {
      "Name": "Attendance",
      "Description": "Student Attendance rules",
      "Rules": [
        {
          "Name": "Attendance from School that student is not enrolled in",
          "Description": "Show students that have attendance data assocatied with a school that they are not associated with",
          "ErrorMessage": null,
          "SeverityLevel": 2,
          "Resolution": null,
          "Sql": "select STudentUniqueId,\n\tStudentSchoolAttendanceEvent.SchoolId as EducationOrganizationId,\n\tStudentSchoolAttendanceEvent.SchoolYEar,\n\t'EdFi.School' as descriminator\nFROM edfi.student\nJOIN edfi.StudentSchoolAttendanceEvent\n\ton student.studentUSI = StudentSchoolAttendanceEvent.StudentUSI\nLEFT JOIN edfi.StudentSchoolAssociation\n\ton StudentSchoolAssociation.SchoolId = StudentSchoolAttendanceEvent.SchoolId\n\tand StudentSchoolAssociation.StudentUSI = StudentSchoolAttendanceEvent.StudentUSI\n\tAND StudentSchoolAssociation.SchoolYear = StudentSchoolAttendanceEvent.SchoolYear\nWHERE StudentSchoolAssociation.studentUSI is null\n\n",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Student with no attendance data",
          "Description": "Find students that are enrolled and have no daily attendance data for that school",
          "ErrorMessage": "",
          "SeverityLevel": 1,
          "Resolution": "",
          "Sql": "select\n  StudentSchoolAssociation.SchoolId as EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  Student.StudentUniqueId\nFROM\n  edfi.StudentSchoolAssociation\n  JOIN edfi.Student on Student.StudentUSI = StudentSchoolAssociation.StudentUSI\n  LEFT JOIN edfi.StudentSchoolAttendanceEvent on StudentSchoolAssociation.schoolId = StudentSchoolAttendanceEvent.SchoolId\n  and StudentSchoolAssociation.StudentUSI = StudentSchoolAttendanceEvent.StudentUSI\n  and StudentSchoolAssociation.SchoolYear = StudentSchoolAttendanceEvent.SchoolYear\nwhere\n  StudentSchoolAttendanceEvent.studentUSI is null;",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        }
      ],
      "Tags": []
    },
    {
      "Name": "Staff",
      "Description": "Problems with staff / section association",
      "Rules": [
        {
          "Name": "Staff not assigned to class",
          "Description": "There is a class that has face-to-face instruction but no instructor defined",
          "ErrorMessage": "",
          "SeverityLevel": 2,
          "Resolution": "",
          "Sql": "select\n  section.SchoolId EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  section.SectionIdentifier,\n  Section.SessionName\nfrom\n  edfi.section\n  JOIN edfi.descriptor on section.MediumOfInstructionDescriptorId = descriptor.DescriptorId\n  LEFT JOIN edfi.StaffSectionAssociation on StaffSectionAssociation.SChoolId = section.SchoolId\n  and StaffSectionAssociation.SchoolYear = section.SchoolYear\n  and StaffSectionAssociation.SessionName = section.SessionName\n  and StaffSectionAssociation.SectionIdentifier = section.SectionIdentifier\nwhere\n  descriptor.CodeValue = 'Face-to-face instruction'\n  and StaffSectionAssociation.StaffUSI is null;",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        },
        {
          "Name": "Staff assignment missing end date",
          "Description": "Staff shows withdraw reason but not a date",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "select StaffUniqueId,\n\tStaffEducationOrganizationEmploymentAssociation.EducationOrganizationId,\n\tDescriptor.CodeValue SeperationReason\nFROM edfi.Staff\nJOIN edfi.StaffEducationOrganizationEmploymentAssociation \n\ton staff.StaffUSI = StaffEducationOrganizationEmploymentAssociation.StaffUSI\nJOIN edfi.Descriptor\n\ton DescriptorId = SeparationReasonDescriptorId\nwhere endDate is  null and SeparationReasonDescriptorId is not null\n\n",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Staff missing withdraw reason",
          "Description": "Staff has an end date, but not a withdraw reason",
          "ErrorMessage": null,
          "SeverityLevel": 2,
          "Resolution": null,
          "Sql": "\nselect StaffUniqueId,\n\tStaffEducationOrganizationEmploymentAssociation.EducationOrganizationId,\n\tStaffEducationOrganizationEmploymentAssociation.endDate\nFROM edfi.Staff\nJOIN edfi.StaffEducationOrganizationEmploymentAssociation \n\ton staff.StaffUSI = StaffEducationOrganizationEmploymentAssociation.StaffUSI\nwhere endDate is not null and SeparationReasonDescriptorId is null\n\n",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "staff missing employement",
          "Description": "Show all staff that have an assignment but no enployement association with that school or district",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "select StaffUniqueId,\n\tStaffEducationOrganizationAssignmentAssociation.EducationOrganizationId,\n\tStaffEducationOrganizationAssignmentAssociation.PositionTitle\nFROM edfi.Staff\nJOIN edfi.StaffEducationOrganizationAssignmentAssociation \n\ton staff.StaffUSI = StaffEducationOrganizationAssignmentAssociation.StaffUSI\nleft join edfi.school\n\ton StaffEducationOrganizationAssignmentAssociation.EducationOrganizationId = school.SchoolId\nleft join edfi.StaffEducationOrganizationEmploymentAssociation\n\ton StaffEducationOrganizationAssignmentAssociation.StaffUSI = StaffEducationOrganizationEmploymentAssociation.StaffUSI\n\tand (StaffEducationOrganizationAssignmentAssociation.EducationOrganizationId = StaffEducationOrganizationEmploymentAssociation.EducationOrganizationId\n\tor school.LocalEducationAgencyId = StaffEducationOrganizationEmploymentAssociation.EducationOrganizationId)\nwhere StaffEducationOrganizationEmploymentAssociation.StaffUSI is null\n",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "face-to-face class missing instructor",
          "Description": "A class has a medium of instruction value of 'Face-to-face' but no instructor",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "select\n  section.SchoolId EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  section.SectionIdentifier,\n  Section.SessionName\nfrom\n  edfi.section\n  JOIN edfi.descriptor on section.MediumOfInstructionDescriptorId = descriptor.DescriptorId\n  LEFT JOIN edfi.StaffSectionAssociation on StaffSectionAssociation.SChoolId = section.SchoolId\n  and StaffSectionAssociation.SchoolYear = section.SchoolYear\n  and StaffSectionAssociation.SessionName = section.SessionName\n  and StaffSectionAssociation.SectionIdentifier = section.SectionIdentifier\nwhere\n  descriptor.CodeValue = 'Face-to-face instruction'\n  and StaffSectionAssociation.StaffUSI is null;",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        }
      ],
      "Tags": []
    },
    {
      "Name": "Student School Enrollment",
      "Description": "Rules relating to a student's enrollment in a school",
      "Rules": [
        {
          "Name": "Exiting student missing withdraw type",
          "Description": "A student has an exit date from a school but no associated exit type descriptor",
          "ErrorMessage": "",
          "SeverityLevel": 2,
          "Resolution": "",
          "Sql": "select\n  StudentSchoolAssociation.SchoolId as EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  Student.StudentUniqueId,\n  StudentSchoolAssociation.ExitWithdrawDate\nFROM\n  edfi.StudentSchoolAssociation\n  JOIN edfi.Student on Student.StudentUSI = StudentSchoolAssociation.StudentUSI\nwhere\n  StudentSchoolAssociation.ExitWithdrawDate is not null\n  and StudentSchoolAssociation.ExitWithdrawTypeDescriptorId is null",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        },
        {
          "Name": "School has less than 20 students",
          "Description": "Find schools that have less than 20 students",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "--every school should have at least 20 students enrolled\nselect\n  school.SchoolId EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  count(StudentSchoolAssociation.studentUSI) as StudentCount\nfrom\n  edfi.School\n  LEFT JOIN edfi.StudentSchoolAssociation on School.schoolId = StudentSchoolAssociation.schoolId\ngroup by\n  school.schoolId\nhaving\n  count(StudentSchoolAssociation.studentUSI) < 20;",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Student does not have grade defined",
          "Description": "Student does not have a grade defined",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "select\n  StudentSchoolAssociation.SchoolId as EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  Student.StudentUniqueId\nFROM\n  edfi.StudentSchoolAssociation\n  JOIN edfi.Student on Student.StudentUSI = StudentSchoolAssociation.StudentUSI\nWHERE\n  EntryGradeLevelDescriptorId IS NULL",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "student exit date before enrollment date",
          "Description": "A student has an enrollment date for a school that is after their exit date",
          "ErrorMessage": "student exit date before enrollment date",
          "SeverityLevel": 2,
          "Resolution": "fix it",
          "Sql": "select\n  StudentSchoolAssociation.SchoolId as EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  Student.StudentUniqueId,\n  StudentSchoolAssociation.ExitWithdrawDate\nFROM\n  edfi.StudentSchoolAssociation\n  JOIN edfi.Student on Student.StudentUSI = StudentSchoolAssociation.StudentUSI\nwhere\n  StudentSchoolAssociation.ExitWithdrawDate < StudentSchoolAssociation.EntryDate;",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        },
        {
          "Name": "Student not enrolled in school",
          "Description": "Show all students not associated with a School",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "\nSELECT\n\tStudentUniqueId\nFrom Edfi.Student\nLEFT JOIN Edfi.StudentSchoolAssociation\n\ton student.StudentUSI = StudentSchoolAssociation.StudentUSI\nWHERE StudentSchoolAssociation.StudentUSI IS NULL;\n\n\n",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Student not associated with an Education Organization",
          "Description": "Show all students not associated with an Education Organization",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "SELECT\n  StudentUniqueId\nFrom\n  Edfi.Student\n  LEFT JOIN Edfi.StudentEducationOrganizationAssociation on student.StudentUSI = StudentEducationOrganizationAssociation.StudentUSI\nWHERE\n  StudentEducationOrganizationAssociation.StudentUSI IS NULL;",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Exiting student missing withdraw date",
          "Description": "A student has an exit reasonfrom a school but no associated exit date",
          "ErrorMessage": "",
          "SeverityLevel": 2,
          "Resolution": "",
          "Sql": "select\n  StudentSchoolAssociation.SchoolId as EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  Student.StudentUniqueId,\n  StudentSchoolAssociation.ExitWithdrawDate\nFROM\n  edfi.StudentSchoolAssociation\n  JOIN edfi.Student on Student.StudentUSI = StudentSchoolAssociation.StudentUSI\nwhere\n  StudentSchoolAssociation.ExitWithdrawDate is  null\n  and StudentSchoolAssociation.ExitWithdrawTypeDescriptorId is not null",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        },
        {
          "Name": "Missing StudentEducationOrganization association",
          "Description": "Show students that are enrolled in a school but do not have a StudentEducationOrganizationAssociation record for that school or LEA",
          "ErrorMessage": null,
          "SeverityLevel": 2,
          "Resolution": null,
          "Sql": "select\n  StudentUniqueId,\n  School.SchoolId as EducationOrganizationId,\n  'EdFi.School' as descriminator\nFROM\n  edfi.student\n  JOIN edfi.StudentSchoolAssociation on student.studentUSI = StudentSchoolAssociation.StudentUSI\n  JOIN edfi.School on StudentSchoolAssociation.SchoolId = School.SchoolId\n  LEFT JOIN edfi.StudentEducationOrganizationAssociation on StudentEducationOrganizationAssociation.studentUSI = Student.StudentUSI\n  AND (\n    StudentEducationOrganizationAssociation.EducationOrganizationId = school.SchoolId\n    OR StudentEducationOrganizationAssociation.EducationOrganizationId = school.LocalEducationAgencyId\n  )\nWHERE\n  StudentEducationOrganizationAssociation.studentUSI is null",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "enrollment date in future",
          "Description": "A student is showing an enrolled on a date in the future",
          "ErrorMessage": "",
          "SeverityLevel": 1,
          "Resolution": "",
          "Sql": "select\n  StudentSchoolAssociation.SchoolId as EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  Student.StudentUniqueId,\n  StudentSchoolAssociation.EntryDate\nFROM\n  edfi.StudentSchoolAssociation\n  JOIN edfi.Student on Student.StudentUSI = StudentSchoolAssociation.StudentUSI\nwhere\n  StudentSchoolAssociation.EntryDate > getdate();",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        }
      ],
      "Tags": []
    },
    {
      "Name": "Student Demographics",
      "Description": "Reference data about students",
      "Rules": [
        {
          "Name": "Student missing parents",
          "Description": "Student does not have a parent relationship defined",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "--SELECT\n--  0 educationOrganizationId,\n--  StudentUniqueId\n--FROM\n--  edfi.Student\n--  left join edfi.StudentParentAssociation on Student.StudentUSI = --StudentParentAssociation.StudentUSI;\nSELECT\n  (SELECT\n\tCASE\n\t\tWHEN ssa.SchoolId IS NOT NULL THEN ssa.SchoolId\n\t\tELSE 0\n\tEND  \n  )as EducationOrganizationId,\n  StudentUniqueId\n  FROM\n  edfi.Student\n  left join edfi.StudentParentAssociation on Student.StudentUSI = StudentParentAssociation.StudentUSI\n  left join edfi.StudentSchoolAssociation ssa on ssa.StudentUSI=student.StudentUSI\n    where ParentUSI is null\n  order by EducationOrganizationId",
          "Version": "2",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Student Not associated with Ed Org",
          "Description": "Show Students that are associated with a school but not an EducationOrganization",
          "ErrorMessage": null,
          "SeverityLevel": 3,
          "Resolution": null,
          "Sql": "\nSELECT\n\tStudentUniqueId,\n\tStudentSchoolAssociation.SchoolId\nFrom Edfi.Student\nJOIN Edfi.StudentSchoolAssociation\n\ton student.StudentUSI = StudentSchoolAssociation.StudentUSI\nJOIN Edfi.School\n\ton StudentSchoolAssociation.SchoolId = SChool.SchoolId\nLEFT JOIN EdFi.StudentEducationOrganizationAssociation\n\ton StudentEducationOrganizationAssociation.StudentUSI = StudentSchoolAssociation.StudentUSI\n\tAND (StudentEducationOrganizationAssociation.EducationOrganizationId = StudentSchoolAssociation.SchoolId\n\tOR StudentEducationOrganizationAssociation.EducationOrganizationId = SChool.LocalEducationAgencyId)\nWHERE StudentEducationOrganizationAssociation.StudentUSI IS NULL",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Invalid Zip code in student address",
          "Description": "Zip Code contains an alpha character",
          "ErrorMessage": null,
          "SeverityLevel": 2,
          "Resolution": null,
          "Sql": "\nselect StudentUniqueId,\n\tStudentEducationOrganizationAssociationAddress.EducationOrganizationId,\n\tpostalCode\nFrom edfi.StudentEducationOrganizationAssociationAddress\nJOIN edfi.student on StudentEducationOrganizationAssociationAddress.StudentUSI = student.StudentUSI\nwhere upper(postalCode) like '%[A-Z]%'\n",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Student missing addresses",
          "Description": "Show students that do not have at least one associated address",
          "ErrorMessage": "",
          "SeverityLevel": 2,
          "Resolution": "",
          "Sql": "select\n  StudentEducationOrganizationAssociation.EducationOrganizationId,\n  STudent.StudentUniqueId,\n  student.LastSurname\nFROM\n  edfi.Student\n  JOIN edfi.StudentEducationOrganizationAssociation on student.studentUSI = StudentEducationOrganizationAssociation.StudentUSI\n  LEFT JOIN edfi.StudentEducationOrganizationAssociationAddress on StudentEducationOrganizationAssociationAddress.StudentUSI = Student.StudentUSI\n  and StudentEducationOrganizationAssociationAddress.EducationOrganizationId = StudentEducationOrganizationAssociation.EducationOrganizationId\nwhere\n  StudentEducationOrganizationAssociationAddress.StudentUSI is null",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        },
        {
          "Name": "Student missing Identification Code",
          "Description": "Student does not have the same identification code types as other students with the same Education Organization Id",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "WITH CTE_IdentificationSystems \n\t(StudentIdentificationSystemDescriptorId, EducationOrganizationId, CodeValue)\nAS\n(\nSELECT StudentIdentificationSystemDescriptorId,\nEducationOrganizationId,\n\tCodeValue\nFROM EdFi.StudentEducationOrganizationAssociationStudentIdentificationCode\nJOIN EdFi.Descriptor \n\ton StudentIdentificationSystemDescriptorId = DescriptorId\nGROUP by StudentIdentificationSystemDescriptorId, EducationOrganizationId, CodeValue\nHAVING COUNT(*) > 10\n)\nSELECT\n\tStudentUniqueId,\n\tStudentEducationOrganizationAssociation.EducationOrganizationId,\n\tCodeValue StudentIdentificationSystem\nFROM\n\tEdFi.Student\nJOIN EdFi.StudentEducationOrganizationAssociation\n\ton Student.StudentUSI = StudentEducationOrganizationAssociation.StudentUSI\nCROSS JOIN CTE_IdentificationSystems\nLEFT JOIN edfi.StudentEducationOrganizationAssociationStudentIdentificationCode\n\ton StudentEducationOrganizationAssociationStudentIdentificationCode.StudentUSI\n\t\t= StudentEducationOrganizationAssociation.StudentUSI\n\tAND StudentEducationOrganizationAssociationStudentIdentificationCode.EducationOrganizationId\n\t\t= StudentEducationOrganizationAssociation.EducationOrganizationId\n    AND StudentEducationOrganizationAssociationStudentIdentificationCode.StudentIdentificationSystemDescriptorId\n\t\t= \tCTE_IdentificationSystems.StudentIdentificationSystemDescriptorId\n\tAND StudentEducationOrganizationAssociationStudentIdentificationCode.EducationOrganizationId\n\t\t= CTE_IdentificationSystems.EducationOrganizationId\nWHERE StudentEducationOrganizationAssociationStudentIdentificationCode.StudentUSI IS NULL\n",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        },
        {
          "Name": "Student missing race",
          "Description": "A student does not have any ethnicity defined",
          "ErrorMessage": "",
          "SeverityLevel": 2,
          "Resolution": "",
          "Sql": "select\n  StudentEducationOrganizationAssociation.EducationOrganizationId,\n  STudent.StudentUniqueId,\n  student.LastSurname\nFROM\n  edfi.Student\n  JOIN edfi.StudentEducationOrganizationAssociation on student.studentUSI = StudentEducationOrganizationAssociation.StudentUSI\n  LEFT JOIN edfi.StudentEducationOrganizationAssociationRace on StudentEducationOrganizationAssociationRace.StudentUSI = Student.StudentUSI\n  and StudentEducationOrganizationAssociationRace.EducationOrganizationId = StudentEducationOrganizationAssociation.EducationOrganizationId\nwhere\n  StudentEducationOrganizationAssociationRace.RaceDescriptorId is null",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 800,
          "Tags": []
        },
        {
          "Name": "possible duplicate students",
          "Description": "Multiple students have the same name and birthdate",
          "ErrorMessage": "",
          "SeverityLevel": 1,
          "Resolution": "",
          "Sql": "Select\n  student.StudentUniqueId,\n  studentEducationOrganizationAssociation.EducationOrganizationId,\n  EducationOrganization.Discriminator,\n  Student.birthDate,\n  student.Lastsurname,\n  Student2.StudentUniqueId StudentId2,\n  soa2.EducationOrganizationId EdOrg2Id\nFROM\n  edfi.Student\n  JOIN edfi.studentEducationOrganizationAssociation on student.StudentUSI = studentEducationOrganizationAssociation.StudentUSI\n  JOIN edfi.Student as student2 on lower(student.LastSurname) = lower(student2.LastSurname)\n  and student.BirthDate = student2.BirthDate\n  AND student.StudentUSI < STudent2.StudentUSI\n  and lower(student.firstName) = lower(student2.FirstName)\n  JOIN edfi.studentEducationOrganizationAssociation soa2 on student2.StudentUSI = soa2.StudentUSI\n  JOIN edfi.EducationOrganization on EducationOrganization.EducationOrganizationId = StudentEducationOrganizationAssociation.EducationOrganizationId;",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        },
        {
          "Name": "Student missing telephone number",
          "Description": "Show students that do not have at least one associated Telephone number",
          "ErrorMessage": "",
          "SeverityLevel": 2,
          "Resolution": "",
          "Sql": "select\n  StudentEducationOrganizationAssociation.EducationOrganizationId,\n  STudent.StudentUniqueId,\n  student.LastSurname\nFROM\n  edfi.Student\n  JOIN edfi.StudentEducationOrganizationAssociation on student.studentUSI = StudentEducationOrganizationAssociation.StudentUSI\n  LEFT JOIN edfi.StudentEducationOrganizationAssociationTelephone on StudentEducationOrganizationAssociationTelephone.StudentUSI = Student.StudentUSI\n  and StudentEducationOrganizationAssociationTelephone.EducationOrganizationId = StudentEducationOrganizationAssociation.EducationOrganizationId\nwhere\n  StudentEducationOrganizationAssociationTelephone.StudentUSI is null",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        },
        {
          "Name": "Unaccompanied Youth not homeless",
          "Description": "Show students that are unaccompanied youth but not homeless",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "WITH CTE_StudentCharacteristic (\n  StudentUSI,\n  EducationOrganizationId,\n  StudentCharacteristic\n) AS (\n  select\n    StudentUSI,\n    StudentEducationOrganizationAssociationStudentCharacteristic.EducationOrganizationId,\n    CodeValue as StudentCharacteristic\n  FROM\n    edfi.StudentEducationOrganizationAssociationStudentCharacteristic\n    JOIN edfi.descriptor StudentCharacteristicDescriptor on StudentEducationOrganizationAssociationStudentCharacteristic.StudentCharacteristicDescriptorId = StudentCharacteristicDescriptor.descriptorId\n)\nSelect\n  StudentUniqueId,\n  CTE_Unaccompanied.EducationOrganizationId,\n  CTE_Unaccompanied.StudentCharacteristic\nFROM\n  edfi.Student\n  JOIN CTE_StudentCharacteristic CTE_Unaccompanied on CTE_Unaccompanied.StudentUSI = Student.StudentUSI\n  LEFT JOIN CTE_StudentCharacteristic CTE_Homeless ON CTE_Unaccompanied.StudentUSI = CTE_Homeless.StudentUSI\n  AND CTE_Unaccompanied.EducationOrganizationId = CTE_Homeless.EducationOrganizationId\n  and CTE_Homeless.StudentCharacteristic = 'Homeless'\nWhere\n  CTE_Unaccompanied.StudentCharacteristic = 'Unaccompanied Youth';",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        }
      ],
      "Tags": []
    },
    {
      "Name": "Student Course Enrollment",
      "Description": "rules related to student course enrollment",
      "Rules": [
        {
          "Name": "Students leaving class after it is over",
          "Description": "This check finds students where their association with the section ends after the class is over",
          "ErrorMessage": "",
          "SeverityLevel": 2,
          "Resolution": "",
          "Sql": "select\n  edfi.Section.SchoolId as EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  edfi.Student.StudentUniqueId,\n  edfi.StudentSectionAssociation.EndDate StudentSectionAssociationEndDate,\n  edfi.CourseOffering.CourseCode,\n  edfi.CourseOffering.LocalCourseTitle,\n  edfi.session.EndDate SessionEndDate\nFROM\n  edfi.StudentSectionAssociation\n  JOIN edfi.section on StudentSectionAssociation.SchoolId = Section.SchoolId\n  and StudentSectionAssociation.LocalCourseCode = Section.LocalCourseCode\n  and StudentSectionAssociation.SchoolYear = Section.SchoolYear\n  and Section.SectionIdentifier = StudentSectionAssociation.SectionIdentifier\n  and Section.SessionName = StudentSectionAssociation.SessionName\n  JOIN edfi.courseOffering on Section.SchoolId = CourseOffering.SchoolId\n  and Section.LocalCourseCode = CourseOffering.LocalCourseCode\n  and Section.SchoolYear = CourseOffering.SchoolYear\n  and CourseOffering.SessionName = Section.SessionName\n  JOIN edfi.session on CourseOffering.SchoolId = Session.SchoolId\n  and Session.SchoolYear = CourseOffering.SchoolYear\n  and Session.SessionName = CourseOffering.SessionName\n  JOIN edfi.Student on Student.StudentUSI = StudentSectionAssociation.StudentUSI\nwhere\n  StudentSectionAssociation.EndDate > session.EndDate",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        },
        {
          "Name": "Student enrolled in a class before it begin",
          "Description": "This check finds students that are associated with a class section on a date that is before the section begins.",
          "ErrorMessage": "",
          "SeverityLevel": 2,
          "Resolution": "",
          "Sql": "select\n  edfi.Section.SchoolId as EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  edfi.Student.StudentUniqueId,\n  edfi.StudentSectionAssociation.BeginDate StudentSectionAssociationBeginDate,\n  edfi.CourseOffering.CourseCode,\n  edfi.CourseOffering.LocalCourseTitle,\n  edfi.session.beginDate SessionBeginDate\nFROM\n  edfi.StudentSectionAssociation\n  JOIN edfi.section on StudentSectionAssociation.SchoolId = Section.SchoolId\n  and StudentSectionAssociation.LocalCourseCode = Section.LocalCourseCode\n  and StudentSectionAssociation.SchoolYear = Section.SchoolYear\n  and Section.SectionIdentifier = StudentSectionAssociation.SectionIdentifier\n  and Section.SessionName = StudentSectionAssociation.SessionName\n  JOIN edfi.courseOffering on Section.SchoolId = CourseOffering.SchoolId\n  and Section.LocalCourseCode = CourseOffering.LocalCourseCode\n  and Section.SchoolYear = CourseOffering.SchoolYear\n  and CourseOffering.SessionName = Section.SessionName\n  JOIN edfi.session on CourseOffering.SchoolId = Session.SchoolId\n  and Session.SchoolYear = CourseOffering.SchoolYear\n  and Session.SessionName = CourseOffering.SessionName\n  JOIN edfi.Student on Student.StudentUSI = StudentSectionAssociation.StudentUSI\nwhere\n  StudentSectionAssociation.BeginDate < session.BeginDate",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        }
      ],
      "Tags": []
    },
    {
      "Name": "Ed Orgs",
      "Description": "Education ORganizations, including schools and LEA and SEA",
      "Rules": [
        {
          "Name": "School has less then 5 courses",
          "Description": "Every school should have at least 5 course offerings",
          "ErrorMessage": "",
          "SeverityLevel": 1,
          "Resolution": "",
          "Sql": "select\n  school.SchoolId EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  count(CourseOffering.CourseCode) as CourseOfferingCount\nfrom\n  edfi.School\n  LEFT JOIN edfi.CourseOffering on school.schoolId = CourseOffering.schoolId\ngroup by\n  school.schoolId\nhaving\n  count(*) < 5;",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        },
        {
          "Name": "School has less than 5 staff",
          "Description": "Every school should have at least 5 staff members",
          "ErrorMessage": "",
          "SeverityLevel": 1,
          "Resolution": "",
          "Sql": "select\n  school.SchoolId EducationOrganizationId,\n  'Edfi.School' Discriminator,\n  count(StaffSchoolAssociation.StaffUSI) as StaffCount\nfrom\n  edfi.School\n  LEFT JOIN edfi.StaffSchoolAssociation on school.schoolId = StaffSchoolAssociation.schoolId\ngroup by\n  school.schoolId\nhaving\n  count(*) < 5;",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": 100,
          "Tags": []
        },
        {
          "Name": "Education Organization missing address",
          "Description": "Eudcation Organization missing address",
          "ErrorMessage": null,
          "SeverityLevel": 1,
          "Resolution": null,
          "Sql": "select\n  EducationOrganization.EducationOrganizationId,\n  EducationOrganization.Discriminator\nFROM\n  edfi.EducationOrganization\n     LEFT JOIN edfi.EducationOrganizationAddress\n     on EducationOrganization.EducationOrganizationId = EducationOrganizationAddress.EducationOrganizationId\nwhere\n  EducationOrganizationAddress.EducationOrganizationId is null",
          "Version": "1",
          "ExternalRuleId": null,
          "MaxNumberResults": null,
          "Tags": []
        }
      ],
      "Tags": []
    },
    {
      "Name": "program services",
      "Description": "validation rules related to program services",
      "Rules": [
        {
          "Name": "Homeless Student not getting services",
          "Description": "Show students in a homeless program that are not getting services",
          "ErrorMessage": null,
          "SeverityLevel": 2,
          "Resolution": null,
          "Sql": "Select\n  StudentUniqueId,\n  StudentProgramAssociation.EducationOrganizationId,\n  Program.ProgramName,\n  StudentProgramAssociation.ProgramEducationOrganizationId,\n  ProgramTypeDescriptor.codeValue as ProgramTypeDescriptor\nFROM\n  edfi.Student\n  JOIN edfi.StudentProgramAssociation on Student.StudentUSI = StudentProgramAssociation.StudentUSI\n  JOIN edfi.program on StudentProgramAssociation.ProgramEducationOrganizationId = program.EducationOrganizationId\n  and StudentProgramAssociation.ProgramName = program.programName\n  JOIN edfi.Descriptor as ProgramTypeDescriptor on ProgramTypeDescriptor.DescriptorId = program.ProgramTypeDescriptorId\n  left join edfi.StudentHomelessProgramAssociationHomelessProgramService on StudentHomelessProgramAssociationHomelessProgramService.StudentUSI = StudentProgramAssociation.StudentUSI\nwhere\n  ProgramTypeDescriptor.codeValue = 'Homeless'\n  and StudentHomelessProgramAssociationHomelessProgramService.StudentUSI is null",
          "Version": "1",
          "ExternalRuleId": "",
          "MaxNumberResults": null,
          "Tags": []
        }
      ],
      "Tags": []
    }
  ],
  "Tags": [],
  "DestinationTable": "EdFiRuleExecutionLogDetails",
  "DestinationStructure": "[{\"Name\":\"id\",\"Type\":\"int\",\"IsNullable\":false},{\"Name\":\"educationorganizationid\",\"Type\":\"int\",\"IsNullable\":true},{\"Name\":\"studentuniqueid\",\"Type\":\"nvarchar\",\"IsNullable\":true},{\"Name\":\"coursecode\",\"Type\":\"nvarchar\",\"IsNullable\":true},{\"Name\":\"discriminator\",\"Type\":\"nvarchar\",\"IsNullable\":true},{\"Name\":\"programname\",\"Type\":\"nvarchar\",\"IsNullable\":true},{\"Name\":\"staffuniqueid\",\"Type\":\"nvarchar\",\"IsNullable\":true},{\"Name\":\"otherdetails\",\"Type\":\"nvarchar\",\"IsNullable\":true},{\"Name\":\"ruleexecutionlogid\",\"Type\":\"int\",\"IsNullable\":false}]"
}